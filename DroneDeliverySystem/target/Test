[
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "Diferrent order entries consisting invalid of orderId location and time should not be processed",
        "description": "",
        "id": "check-to-validate-the-syntax-of-order-details-present-in-the-input-file;diferrent-order-entries-consisting-invalid-of-orderid-location-and-time-should-not-be-processed",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 108904014,
              "status": "passed"
            },
            "line": 4,
            "name": "Input file contains corrupted data",
            "match": {
              "location": "CheckInputEntryValidity.Input_File_contains_corrupted_data()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15929,
              "status": "passed"
            },
            "line": 5,
            "name": "The method should return false",
            "match": {
              "location": "CheckInputEntryValidity.the_generated_order_list_should_not_have_invalid_entries()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 7,
        "name": "validate that file contains the user details in the format OrderId,Location,OrderPlaceTime",
        "description": "",
        "id": "check-to-validate-the-syntax-of-order-details-present-in-the-input-file;validate-that-file-contains-the-user-details-in-the-format-orderid,location,orderplacetime",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 44942,
              "status": "passed"
            },
            "line": 8,
            "name": "check if invalid orders get processed",
            "match": {
              "location": "CheckInputEntryValidity.a_valid_input_file_with_invalid_entries()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23324,
              "status": "passed"
            },
            "line": 9,
            "name": "The method should return false",
            "match": {
              "location": "CheckInputEntryValidity.the_generated_order_list_should_not_have_invalid_entries()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 11,
        "name": "validate that method returns false when orderplaceTime is greater than 22:00:00",
        "description": "",
        "id": "check-to-validate-the-syntax-of-order-details-present-in-the-input-file;validate-that-method-returns-false-when-orderplacetime-is-greater-than-22:00:00",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 59043789,
              "status": "passed"
            },
            "line": 12,
            "name": "the orderplacetime is after store close hours",
            "match": {
              "location": "CheckInputEntryValidity.when_orderplaceTime_is_after_store_close_hours()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11946,
              "status": "passed"
            },
            "line": 13,
            "name": "The method should return false",
            "match": {
              "location": "CheckInputEntryValidity.the_generated_order_list_should_not_have_invalid_entries()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Check to validate the syntax of order details present in the input file",
    "description": "",
    "id": "check-to-validate-the-syntax-of-order-details-present-in-the-input-file",
    "keyword": "Feature",
    "uri": "CheckInputEntryValidity.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "Validate if the system throws error when input file path is invalid",
        "description": "",
        "id": "inputfile-feature;validate-if-the-system-throws-error-when-input-file-path-is-invalid",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4196121,
              "status": "passed"
            },
            "line": 4,
            "name": "incorrect input file path is entered",
            "match": {
              "location": "ValidateBufferedToArrayListMethod.incorrect_input_file_path_is_entered(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\\user\\input.txt"
                ],
                "line": 5
              },
              {
                "cells": [
                  "C:\\Users\\mahak\\git\\DroneDeliverySystem\\DroneDeliverySystem\\src\\InputFileRows.jpg"
                ],
                "line": 6
              },
              {
                "cells": [
                  "C:\\Users\\mahak\\git\\DroneDeliverySystem\\DroneDeliverySystem\\src\\InputFileRows.txt.$buffer"
                ],
                "line": 7
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 26169,
              "status": "passed"
            },
            "line": 8,
            "name": "File not found exception should be thrown",
            "match": {
              "location": "ValidateBufferedToArrayListMethod.file_not_found_exception_should_be_thrown()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 11,
        "name": "Validate if the system processes the input file when input file path is valid",
        "description": "",
        "id": "inputfile-feature;validate-if-the-system-processes-the-input-file-when-input-file-path-is-valid",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18823379,
              "status": "passed"
            },
            "line": 12,
            "name": "correct input file path is entered",
            "match": {
              "location": "ValidateBufferedToArrayListMethod.correct_input_file_path_is_entered(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "C:\\Users\\mahak\\git\\DroneDeliverySystem\\DroneDeliverySystem\\Resources\\InputFileRows.txt"
                ],
                "line": 13
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15928,
              "status": "passed"
            },
            "line": 14,
            "name": "File not found exception should not be thrown",
            "match": {
              "location": "ValidateBufferedToArrayListMethod.file_not_found_exception_should__not_be_thrown()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "InputFile Feature",
    "description": "",
    "id": "inputfile-feature",
    "keyword": "Feature",
    "uri": "ValidateBufferedToArrayListMethod.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "promotors and detractors are updated according to the dispatch time",
        "description": "",
        "id": "check-to-validate-that-nps-score-is-calculated-correctly;promotors-and-detractors-are-updated-according-to-the-dispatch-time",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 418702,
              "status": "passed"
            },
            "line": 4,
            "name": "Order details and dispatch time are passed",
            "match": {
              "location": "ValidateCalculateNPSScore.orderdetails_and_dispatchtime_is_provided_delivery_method()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 34702,
              "status": "passed"
            },
            "line": 5,
            "name": "The promoter should be incremented according to time elapsed",
            "match": {
              "location": "ValidateCalculateNPSScore.validate_calculated_promoters()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19342,
              "status": "passed"
            },
            "line": 6,
            "name": "Or the detractor should be incremented according to time elapsed",
            "match": {
              "location": "ValidateCalculateNPSScore.validate_calculated_detractors()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18204,
              "status": "passed"
            },
            "line": 7,
            "name": "Total processedorder should be incremented",
            "match": {
              "location": "ValidateCalculateNPSScore.validate_calculated_totalprocessedorder()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Check to validate that NPS Score is calculated correctly",
    "description": "",
    "id": "check-to-validate-that-nps-score-is-calculated-correctly",
    "keyword": "Feature",
    "uri": "ValidateCalculateNPSScore.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "Validate if the system is able to create the order",
        "description": "",
        "id": "check-create-order-method;validate-if-the-system-is-able-to-create-the-order",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 174079,
              "status": "passed"
            },
            "line": 4,
            "name": "Order details are given to order process method",
            "match": {
              "location": "ValidateCreateOrderList.inputOrderParameters()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 38116,
              "status": "passed"
            },
            "line": 5,
            "name": "Order list should be created",
            "match": {
              "location": "ValidateCreateOrderList.order_list_should_be_created()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 7,
        "name": "Validate if the system is unable to create the order",
        "description": "",
        "id": "check-create-order-method;validate-if-the-system-is-unable-to-create-the-order",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 274204,
              "status": "passed"
            },
            "line": 8,
            "name": "Invalid Order details are given to order process method",
            "match": {
              "location": "ValidateCreateOrderList.invalid_inputOrderParameters()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 24463,
              "status": "passed"
            },
            "line": 9,
            "name": "Order list should result in error",
            "match": {
              "location": "ValidateCreateOrderList.order_list_should_not_be_created()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 11,
        "name": "Validate if the system is unable to create the order",
        "description": "",
        "id": "check-create-order-method;validate-if-the-system-is-unable-to-create-the-order",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 143360,
              "status": "passed"
            },
            "line": 12,
            "name": "Invalid Order details are given to order process method",
            "match": {
              "location": "ValidateCreateOrderList.invalid_inputOrderParameters()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 17636,
              "status": "passed"
            },
            "line": 13,
            "name": "Order list should result in error",
            "match": {
              "location": "ValidateCreateOrderList.order_list_should_not_be_created()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Check create Order Method",
    "description": "",
    "id": "check-create-order-method",
    "keyword": "Feature",
    "uri": "ValidateCreateOrderList.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "validate the calculated deliverytime matches the output",
        "description": "",
        "id": "validate-the-delivery-time-and-retuirn-time-formula-is-correct;validate-the-calculated-deliverytime-matches-the-output",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 279324,
              "status": "passed"
            },
            "line": 4,
            "name": "Orderdetails and curr dispatch time is provided to deliverytime method",
            "match": {
              "location": "ValidateReturnTimeAndDeliveryTime.orderdetails_and_dispatchtime_is_provided_delivery_method()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 114915,
              "status": "passed"
            },
            "line": 5,
            "name": "delivery time must be calculated",
            "match": {
              "location": "ValidateReturnTimeAndDeliveryTime.validate_calculated_deliverytime()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 7,
        "name": "validate the calculated returntime matches the output",
        "description": "",
        "id": "validate-the-delivery-time-and-retuirn-time-formula-is-correct;validate-the-calculated-returntime-matches-the-output",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 281031,
              "status": "passed"
            },
            "line": 8,
            "name": "Orderdetails and curr dispatch time is provided to returntime method",
            "match": {
              "location": "ValidateReturnTimeAndDeliveryTime.orderdetails_and_dispatchtime_is_provided_to_return_method()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 79076,
              "status": "passed"
            },
            "line": 9,
            "name": "return time must be calculated",
            "match": {
              "location": "ValidateReturnTimeAndDeliveryTime.validate_calculated_returntime()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Validate the delivery time and retuirn time formula is correct",
    "description": "",
    "id": "validate-the-delivery-time-and-retuirn-time-formula-is-correct",
    "keyword": "Feature",
    "uri": "ValidateReturnTimeAndDeliveryTime.feature"
  }
]